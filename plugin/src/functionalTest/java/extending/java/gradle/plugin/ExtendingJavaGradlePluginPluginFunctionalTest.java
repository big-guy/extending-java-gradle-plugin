/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package extending.java.gradle.plugin;

import org.gradle.testkit.runner.BuildResult;
import org.gradle.testkit.runner.GradleRunner;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;

import static org.junit.jupiter.api.Assertions.assertTrue;

/**
 * A simple functional test for the 'extending.java.gradle.plugin.greeting' plugin.
 */
class ExtendingJavaGradlePluginPluginFunctionalTest {
    @TempDir
    File projectDir;

    private File getBuildFile() {
        return new File(projectDir, "build.gradle");
    }

    private File getSettingsFile() {
        return new File(projectDir, "settings.gradle");
    }

    @Test
    void canRunTask() throws IOException {
        writeString(getSettingsFile(), "");
        writeString(getBuildFile(),
                "plugins {",
                "  id('extending.java.gradle.plugin.greeting')",
                "  id('java')",
                "}",
                "",
                "gradlePlugin {",
                "  pluginPortal {",
                "    vcsUrl = uri('http://example.com')",
                "    websiteUrl = uri('http://example.com')",
                "  }",
                "  plugins {",
                "     hello {",
                "        id = 'hello'",
                "        implementationClass = 'foo.Hello'",
                "        description = 'blah blah blah'",
                "     }",
                "  }",
                "}"
        );

        // Run the build
        GradleRunner runner = GradleRunner.create();
        runner.forwardOutput();
        runner.withPluginClasspath();
        runner.withArguments("help");
        runner.withProjectDir(projectDir);
        BuildResult result = runner.build();
    }

    private void writeString(File file, String... strings) throws IOException {
        try (Writer writer = new FileWriter(file)) {
            for (String string : strings) {
                writer.write(string);
                writer.write('\n');
            }
        }
    }
}
